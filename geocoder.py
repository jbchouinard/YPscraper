#Geocoder.py
#This program imports files generated by YPParser.py,
#then for each business it queries the Google Maps Geocoding API
#to find the latitude and longitude corresponding to the address
#of the business. The results are written to an Excel-formatted csv file
#
#me@jeromebchouinard.ca

import urllib.request
import pickle
import json
import csv
import time

pickle_file='data.pickle'

with open(pickle_file, 'rb') as f:
    businesses=pickle.load(f)

with open('index.txt', 'r') as f:
    last_i=int(f.read())

output_matrix=[]

#Find out coordinates from Google Maps Geocoding API
for i in range(last_i+1, len(businesses)-1):
    if businesses[i][1]!="QC":
        google_url="http://maps.googleapis.com/maps/api/geocode/json?address="+\
                    businesses[i][1].replace(" ","+").replace("Ã©","e")+"&sensor=false"
        url=google_url.encode('ascii', 'ignore').decode('ascii')
        f=urllib.request.urlopen(url)
        time.sleep(0.5)

        #The Geocoding API returns a JSON file
        #It is parsed with the json python module
        while(True):
            try:
                json_raw = f.read()
                break
            except (AttributeError, URLError):
                print("Error, reloading page")
                f=urllib.request.urlopen(google_url)
                
        json_object = json.loads(json_raw.decode('utf-8'))
        
        if json_object['status'] == "OK":
            output_matrix.append\([json_object['results'][0]['geometry']['location']['lat'],\
                                  json_object['results'][0]['geometry']['location']['lng'],\
                                  businesses[i][0].replace("&#039;","'").replace("&amp;","&"),\
                                  json_object['results'][0]['formatted_address'], businesses[i][2]]) 
            last_i=i
        elif json_object['status'] == "OVER_QUERY_LIMIT":
            print("Reached query limit of Google Geocoding API. Aborting.")
            last_i=i-1
            break

#Export to CSV file
f=open('output.csv',mode='a',newline='')
output_csv = csv.writer(f, dialect="excel")

for row in output_matrix:
    output_csv.writerow(row)

f.close()

with open('index.txt', 'w') as f:
    f.write(str(last_i))
